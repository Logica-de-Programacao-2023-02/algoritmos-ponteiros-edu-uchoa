1. Escreva uma função que receba um ponteiro para um inteiro e um valor inteiro n. 
A função deve atualizar o valor do inteiro para a soma dos n primeiros números naturais.

package main
import "fmt"
func somaPrimeirosNaturais(ptr *int, n int) {
    if n <= 0 {
        fmt.Println("Por favor, forneça um valor válido para n.")
        return
    }
    soma := 0
    for i := 1; i <= n; i++ {
        soma += i
    }
    *ptr = soma
}

2. Escreva uma função que receba um ponteiro para um inteiro e verifique se esse inteiro é par ou ímpar.
A função deve atualizar o valor do inteiro para 0 se ele for par ou para 1 se for ímpar.

package main
import "fmt"
func verificaParImpar(ptr *int) {
    if *ptr%2 == 0 {
        *ptr = 0
    } else {
        *ptr = 1
    }
}

3.Escreva uma função em Go que receba um ponteiro para uma string e atualize o valor da string para seu reverso.

package main
import "fmt"
func inverteString(ptr *string) {
    bytes := []byte(*ptr)
    for i, j := 0, len(bytes)-1; i < j; i, j = i+1, j-1 {
        bytes[i], bytes[j] = bytes[j], bytes[i]
    }
    *ptr = string(bytes)
}

4.Escreva uma função em Go que receba um ponteiro para uma variável inteira e atualize
o valor da variável para a soma dos valores dos seus dois últimos dígitos
(por exemplo, se o valor inicial da variável for 1234, o novo valor será 3+4=7).

package main
import "fmt"
func somaUltimosDigitos(ptr *int) {
    valor := *ptr
    ultimoDigito := valor % 10
    valor = valor / 10
    penultimoDigito := valor % 10
    soma := ultimoDigito + penultimoDigito
    *ptr = soma
}

5.Escreva uma função em Go que receba um ponteiro para uma variável float64 e atualize
o valor da variável para a média aritmética entre o seu valor atual e o valor da constante Pi.

package main
import (
	"fmt"
	"math"
)
func atualizaMediaComPi(ptr *float64) {
	valorAtual := *ptr
	media := (valorAtual + math.Pi) / 2
	*ptr = media
}

6.
